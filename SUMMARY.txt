JITTER ROOT CAUSE - EXECUTIVE SUMMARY
======================================

CRITICAL FINDING:
RangedEnemy works perfectly. BasicEnemy/TankEnemy jitter.
Both use force_direct_movement for 3 seconds after teleport.
After 3 seconds, RangedEnemy continues pure direct movement.
After 3 seconds, BasicEnemy falls back to NavigationAgent3D.
NavigationAgent3D is corrupted after teleport.
Result: JITTER for Basic/Tank.

THREE WAYS RANGED ENEMY IS DIFFERENT:

1. Override _should_update_navigation_path() to return false
   Location: RangedEnemy.gd Lines 49-51
   Result: NavAgent never updated, never corrupted

2. Override _process_enemy_behavior() completely
   Location: RangedEnemy.gd Lines 53-134
   Result: Pure direct movement, never calls handle_movement()

3. Direct movement calculation (pure math)
   Location: RangedEnemy.gd Lines 123-129
   Result: No NavigationAgent3D dependency

KEY CODE SNIPPET (RangedEnemy Lines 123-129):
var direction = global_position.direction_to(target_player.global_position)
direction.y = 0
direction = direction.normalized()
var target_velocity = direction * move_speed
velocity = velocity.lerp(target_velocity, acceleration * delta)

vs BasicEnemy (uses handle_movement() Line 210):
var next_path_position = nav_agent.get_next_path_position()
var direction = global_position.direction_to(next_path_position)

DIFFERENCE: RangedEnemy uses player_position directly.
BasicEnemy uses nav_agent waypoint (CORRUPTED after teleport).

CRITICAL MOMENT: Frame 184+ after teleport
- RangedEnemy: Continues pure direct movement = NO JITTER
- BasicEnemy: Falls back to nav_agent = JITTER

SOLUTION: Make BasicEnemy/TankEnemy override _process_enemy_behavior()
to use pure direct movement like RangedEnemy.

