[gd_scene load_steps=7 format=3 uid="uid://character_test_scene_001"]

[ext_resource type="Script" path="res://scripts/testing/CharacterSystemTest.gd" id="1_test_controller"]
[ext_resource type="PackedScene" uid="uid://dho5nhabi6q0i" path="res://scenes/player/Player.tscn" id="2_player"]

[sub_resource type="PlaneMesh" id="PlaneMesh_ground"]
size = Vector2(50, 50)

[sub_resource type="BoxShape3D" id="BoxShape3D_ground"]
size = Vector3(50, 0.1, 50)

[sub_resource type="Environment" id="Environment_test"]
background_mode = 1
background_color = Color(0.15, 0.15, 0.2, 1)
ambient_light_source = 2
ambient_light_color = Color(1, 1, 1, 1)

[sub_resource type="GDScript" id="GDScript_game_manager"]
script/source = "extends Node
## Minimal GameManager for character testing

var player: PlayerController

func _ready() -> void:
	await get_tree().process_frame
	player = get_tree().get_first_node_in_group(\"player\")

	if player:
		print(\"[GameManager] Player found\")
	else:
		push_warning(\"[GameManager] No player found\")

func apply_character_to_player() -> void:
	# This function exists for compatibility but is not used in tests
	# Tests apply characters directly
	pass
"

[node name="CharacterSystemTest" type="Node3D"]

[node name="TestController" type="Node" parent="."]
script = ExtResource("1_test_controller")

[node name="GameManager" type="Node" parent="."]
script = SubResource("GDScript_game_manager")

[node name="Ground" type="StaticBody3D" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="Ground"]
mesh = SubResource("PlaneMesh_ground")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Ground"]
shape = SubResource("BoxShape3D_ground")

[node name="Player" parent="." groups=["player"] instance=ExtResource("2_player")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 10, 0)

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_test")
